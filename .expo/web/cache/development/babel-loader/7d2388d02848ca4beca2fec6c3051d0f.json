{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/mahmoud/Desktop/test/3/my-app/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport IntroSlide from \"./introSlider\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Details from \"./details\";\nimport Meat from \"./meat\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport Reducer from \"./reducer\";\nvar store = createStore(Reducer);\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      appIsReady: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Provider, {\n        store: store,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }\n      }, React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, React.createElement(Stack.Navigator, {\n        initialRouteName: \"IntroSlide\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"IntroSlide\",\n        options: {\n          headerShown: false\n        },\n        component: IntroSlide,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Details\",\n        options: {\n          headerShown: false\n        },\n        component: Details,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Meat\",\n        options: {\n          headerShown: false\n        },\n        component: Meat,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }))));\n      return React.createElement(IntroSlide, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar Stack = createStackNavigator();\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["/home/mahmoud/Desktop/test/3/my-app/App.js"],"names":["React","IntroSlide","NavigationContainer","createStackNavigator","Details","Meat","Provider","createStore","Reducer","store","App","state","appIsReady","headerShown","Component","Stack","styles","StyleSheet","create"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,UAAP;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,OAAP;AACA,OAAOC,IAAP;AAEA,SAASC,QAAT,QAAyB,aAAzB;AAEA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,OAAP;AAEA,IAAMC,KAAK,GAAGF,WAAW,CAACC,OAAD,CAAzB;;IAEqBE,G;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,UAAU,EAAE;AADN,K;;;;;;6BAIC;AACP,aACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEH,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,QAAA,gBAAgB,EAAC,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,MAAP;AACE,QAAA,IAAI,EAAC,YADP;AAEE,QAAA,OAAO,EAAE;AAAEI,UAAAA,WAAW,EAAE;AAAf,SAFX;AAGE,QAAA,SAAS,EAAEZ,UAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME,oBAAC,KAAD,CAAO,MAAP;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,OAAO,EAAE;AAAEY,UAAAA,WAAW,EAAE;AAAf,SAFX;AAGE,QAAA,SAAS,EAAET,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAWE,oBAAC,KAAD,CAAO,MAAP;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,OAAO,EAAE;AAAES,UAAAA,WAAW,EAAE;AAAf,SAFX;AAGE,QAAA,SAAS,EAAER,IAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,CADF,CADF,CADF;AAuBA,aAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EA9B8BL,KAAK,CAACc,S;;SAAlBJ,G;AAgCrB,IAAMK,KAAK,GAAGZ,oBAAoB,EAAlC;AAEA,IAAMa,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport IntroSlide from \"./introSlider\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Details from \"./details\";\nimport Meat from \"./meat\";\n\nimport { Provider } from \"react-redux\";\n\nimport { createStore } from \"redux\";\nimport Reducer from \"./reducer\";\n\nconst store = createStore(Reducer);\n\nexport default class App extends React.Component {\n  state = {\n    appIsReady: false,\n  };\n\n  render() {\n    return (\n      <Provider store={store}>\n        <NavigationContainer>\n          <Stack.Navigator initialRouteName=\"IntroSlide\">\n            <Stack.Screen\n              name=\"IntroSlide\"\n              options={{ headerShown: false }}\n              component={IntroSlide}\n            />\n            <Stack.Screen\n              name=\"Details\"\n              options={{ headerShown: false }}\n              component={Details}\n            />\n            <Stack.Screen\n              name=\"Meat\"\n              options={{ headerShown: false }}\n              component={Meat}\n            />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </Provider>\n    );\n    return <IntroSlide></IntroSlide>;\n  }\n}\nconst Stack = createStackNavigator();\n\nconst styles = StyleSheet.create({});\n"]},"metadata":{},"sourceType":"module"}